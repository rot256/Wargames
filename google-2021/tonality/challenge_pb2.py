# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pb/challenge.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='pb/challenge.proto',
  package='challenge',
  syntax='proto3',
  serialized_options=b'Z\003/pb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x12pb/challenge.proto\x12\tchallenge\"\x1d\n\x05Point\x12\t\n\x01x\x18\x01 \x01(\x0c\x12\t\n\x01y\x18\x02 \x01(\x0c\"!\n\tSignature\x12\t\n\x01r\x18\x01 \x01(\x0c\x12\t\n\x01s\x18\x02 \x01(\x0c\"\x0e\n\x0cHelloRequest\"U\n\rHelloResponse\x12\x10\n\x08message0\x18\x01 \x01(\t\x12\x10\n\x08message1\x18\x02 \x01(\t\x12 \n\x06pubkey\x18\x03 \x01(\x0b\x32\x10.challenge.Point\"\x1d\n\x0bSignRequest\x12\x0e\n\x06scalar\x18\x01 \x01(\x0c\":\n\x0cSignResponse\x12*\n\x0cmessage0_sig\x18\x01 \x01(\x0b\x32\x14.challenge.Signature\";\n\rVerifyRequest\x12*\n\x0cmessage1_sig\x18\x01 \x01(\x0b\x32\x14.challenge.Signature\"\x1e\n\x0eVerifyResponse\x12\x0c\n\x04\x66lag\x18\x01 \x01(\tB\x05Z\x03/pbb\x06proto3'
)




_POINT = _descriptor.Descriptor(
  name='Point',
  full_name='challenge.Point',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='challenge.Point.x', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='y', full_name='challenge.Point.y', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=62,
)


_SIGNATURE = _descriptor.Descriptor(
  name='Signature',
  full_name='challenge.Signature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='r', full_name='challenge.Signature.r', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='s', full_name='challenge.Signature.s', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=97,
)


_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='challenge.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=113,
)


_HELLORESPONSE = _descriptor.Descriptor(
  name='HelloResponse',
  full_name='challenge.HelloResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message0', full_name='challenge.HelloResponse.message0', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message1', full_name='challenge.HelloResponse.message1', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pubkey', full_name='challenge.HelloResponse.pubkey', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=115,
  serialized_end=200,
)


_SIGNREQUEST = _descriptor.Descriptor(
  name='SignRequest',
  full_name='challenge.SignRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='challenge.SignRequest.scalar', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=231,
)


_SIGNRESPONSE = _descriptor.Descriptor(
  name='SignResponse',
  full_name='challenge.SignResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message0_sig', full_name='challenge.SignResponse.message0_sig', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=233,
  serialized_end=291,
)


_VERIFYREQUEST = _descriptor.Descriptor(
  name='VerifyRequest',
  full_name='challenge.VerifyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message1_sig', full_name='challenge.VerifyRequest.message1_sig', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=293,
  serialized_end=352,
)


_VERIFYRESPONSE = _descriptor.Descriptor(
  name='VerifyResponse',
  full_name='challenge.VerifyResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='flag', full_name='challenge.VerifyResponse.flag', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=354,
  serialized_end=384,
)

_HELLORESPONSE.fields_by_name['pubkey'].message_type = _POINT
_SIGNRESPONSE.fields_by_name['message0_sig'].message_type = _SIGNATURE
_VERIFYREQUEST.fields_by_name['message1_sig'].message_type = _SIGNATURE
DESCRIPTOR.message_types_by_name['Point'] = _POINT
DESCRIPTOR.message_types_by_name['Signature'] = _SIGNATURE
DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloResponse'] = _HELLORESPONSE
DESCRIPTOR.message_types_by_name['SignRequest'] = _SIGNREQUEST
DESCRIPTOR.message_types_by_name['SignResponse'] = _SIGNRESPONSE
DESCRIPTOR.message_types_by_name['VerifyRequest'] = _VERIFYREQUEST
DESCRIPTOR.message_types_by_name['VerifyResponse'] = _VERIFYRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Point = _reflection.GeneratedProtocolMessageType('Point', (_message.Message,), {
  'DESCRIPTOR' : _POINT,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.Point)
  })
_sym_db.RegisterMessage(Point)

Signature = _reflection.GeneratedProtocolMessageType('Signature', (_message.Message,), {
  'DESCRIPTOR' : _SIGNATURE,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.Signature)
  })
_sym_db.RegisterMessage(Signature)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), {
  'DESCRIPTOR' : _HELLOREQUEST,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.HelloRequest)
  })
_sym_db.RegisterMessage(HelloRequest)

HelloResponse = _reflection.GeneratedProtocolMessageType('HelloResponse', (_message.Message,), {
  'DESCRIPTOR' : _HELLORESPONSE,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.HelloResponse)
  })
_sym_db.RegisterMessage(HelloResponse)

SignRequest = _reflection.GeneratedProtocolMessageType('SignRequest', (_message.Message,), {
  'DESCRIPTOR' : _SIGNREQUEST,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.SignRequest)
  })
_sym_db.RegisterMessage(SignRequest)

SignResponse = _reflection.GeneratedProtocolMessageType('SignResponse', (_message.Message,), {
  'DESCRIPTOR' : _SIGNRESPONSE,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.SignResponse)
  })
_sym_db.RegisterMessage(SignResponse)

VerifyRequest = _reflection.GeneratedProtocolMessageType('VerifyRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYREQUEST,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.VerifyRequest)
  })
_sym_db.RegisterMessage(VerifyRequest)

VerifyResponse = _reflection.GeneratedProtocolMessageType('VerifyResponse', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYRESPONSE,
  '__module__' : 'pb.challenge_pb2'
  # @@protoc_insertion_point(class_scope:challenge.VerifyResponse)
  })
_sym_db.RegisterMessage(VerifyResponse)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
